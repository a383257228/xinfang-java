<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd"
       default-autowire="byName" default-lazy-init="false">

	<description>Spring数据库配置文件</description>
	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
	<!-- 阿里 druid数据库连接池
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">  
         <property name="url" value="${url}" />  
         <property name="username" value="${username}" />  
         <property name="password" value="${password}" />  
         <property name="driverClassName" value="${driverClassName}" />  
         <property name="filters" value="${filters}" />  
         <property name="maxActive" value="${maxActive}" />
         <property name="initialSize" value="${initialSize}" />
         <property name="maxWait" value="${maxWait}" />
         <property name="minIdle" value="${minIdle}" />  
         <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
         <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />  
         <property name="validationQuery" value="${validationQuery}" />  
         <property name="testWhileIdle" value="${testWhileIdle}" />  
         <property name="testOnBorrow" value="${testOnBorrow}" />  
         <property name="testOnReturn" value="${testOnReturn}" />  
         <property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}" />
         <property name="removeAbandoned" value="${removeAbandoned}" />
         <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />
         <property name="logAbandoned" value="${logAbandoned}" />
	</bean>  -->
	<!-- 开发的时候打印sql配置 
	<bean id="dataSource" class="com.p6spy.engine.spy.P6DataSource"
		destroy-method="close">
		<constructor-arg>
			<bean class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
				<property name="url" value="${url}" />
				<property name="username" value="${username}" />
				<property name="password" value="${password}" />
				<property name="driverClassName" value="${driverClassName}" />
				<property name="filters" value="${filters}" />
				<property name="maxActive" value="${maxActive}" />
				<property name="initialSize" value="${initialSize}" />
				<property name="maxWait" value="${maxWait}" />
				<property name="minIdle" value="${minIdle}" />
				<property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
				<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />
				<property name="validationQuery" value="${validationQuery}" />
				<property name="testWhileIdle" value="${testWhileIdle}" />
				<property name="testOnBorrow" value="${testOnBorrow}" />
				<property name="testOnReturn" value="${testOnReturn}" />
				<property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}" />
				<property name="removeAbandoned" value="${removeAbandoned}" />
				<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />
				<property name="logAbandoned" value="${logAbandoned}" />
			</bean>
		</constructor-arg>
	</bean> -->
	<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close" >
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="idleConnectionTestPeriod" value="60"/>
		<property name="idleMaxAge" value="240"/>
		<property name="maxConnectionsPerPartition" value="${jdbc.maxConn}"/>
		<property name="minConnectionsPerPartition" value="${jdbc.minConn}"/>
		<property name="partitionCount" value="3"/>
		<property name="acquireIncrement" value="5"/>
		<property name="statementsCacheSize" value="100"/>
		<property name="releaseHelperThreads" value="3"/>
	</bean>
	
	<!-- 汇总库数据源 -->
	<!-- <bean id="hzDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
		<property name="driverClassName" value="com.ibm.db2.jcc.DB2Driver" />
		<property name="url" value="jdbc:db2://127.0.0.1:50000/ttDB" />
		<property name="username" value="db2admin"/>
		<property name="password" value="X8F3j9u8b3a1o" />
	</bean> -->
	
	<!-- 数据源配置,在生产环境使用应用服务器的数据库连接池 -->
	<!--
		<jee:jndi-lookup id="dataSource"
		jndi-name="java:comp/env/jdbc/ShowcaseDB" />
	-->
	<!-- Hibernate配置 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="hibernateProperties">
			<props>
				 <prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
                <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
                <prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.cache.provider_configuration_file_resource_path">${hibernate.cache.provider_configuration_file_resource_path}</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.sinosoftframework</value>
				<value>com.sinosoft.xf.petition.accept.domain</value>
				<value>com.sinosoft.xf.petition.instruct.domain</value>
			 	<value>com.sinosoft.xf.system.set.domain</value>
			 	<value>com.sinosoft.xf.system.logon.domain</value>
			 	<value>com.sinosoft.xf.system.transset.domain</value>
			 	<value>com.sinosoft.xf.workflow.domain</value>
			 	<value>com.sinosoft.xf.pubfun.domain</value>
			 	<value>com.sinosoft.xf.document.docissue.domain</value>
				<value>com.sinosoft.databasetable.domain</value>
				<value>com.sinosoft.systemcode.domain</value>
				<value>com.sinosoft.xf.petition.supervision.domain</value>
				<value>com.sinosoft.xf.petition.petitionaccept.domain</value>
				<value>com.sinosoft.xf.petition.deal.domain</value>
				<value>com.sinosoft.xf.petition.end.domain</value>
				<value>com.sinosoft.xf.petition.distribute.domain</value>
				<value>com.sinosoft.xf.petition.oldpetitioner.domain</value>
				<value>com.sinosoft.xf.petition.scan.domain</value>
				<value>com.sinosoft.xf.petition.counter.domain</value>
				<value>com.sinosoft.xf.datatransfer.domain</value>
				<value>com.sinosoft.quartz.domain</value>
				<value>com.sinosoft.authority.domain</value>
				<value>com.sinosoft.menu.domain</value>
				<value>com.sinosoft.organization.domain</value>	
				<value>com.sinosoft.authorityAudit.domain</value>
				<value>com.sinosoft.currentinterface.domain</value>
				<value>com.sinosoft.upload.domain</value>
				<value>com.sinosoft.log.domain</value>
				<value>com.sinosoft.search.domain</value>	
				<value>com.sinosoft.xf.query.domain</value>
				<value>com.sinosoft.xf.analysis.domain</value>
				<value>com.sinosoft.xf.system.transset.domain</value>
				<value>com.sinosoft.xf.system.authority.domain</value>
				<value>com.sinosoft.systemcode.domain</value>
				<value>com.sinosoft.xf.dataPredict.domain</value>
			</list>
		</property>
		<property name="eventListeners">
			<map>
				<entry key="save-update">
					<list>
						<bean class="com.sinosoft.xf.util.listener.PetitionAuditListener" />
						<bean class="org.hibernate.event.def.DefaultSaveOrUpdateEventListener" />
					</list>
				</entry>
			</map>
		</property>
	</bean>
<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource"/>
	</bean>
	<bean id="simpleJdbcTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
		<constructor-arg ref="dataSource"/>
	</bean>
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 事务管理器配置,多数据源JTA事务-->
	<!--
		<bean id="transactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager or
		WebLogicJtaTransactionManager" />
	-->
    <!--
      | ehcache缓存管理器.
      -->
    <bean id="cacheManager"
       class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:cache/ehcache.xml"/>
        <property name="shared" value="true"/>
    </bean>

</beans>